# Generated by Django 3.2.14 on 2023-02-21 17:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datacenter_Name', models.CharField(help_text='Name of the datacenter', max_length=32)),
                ('datacenter_location', models.CharField(help_text='Location / address', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='SNOWChangeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.CharField(help_text='Short Description', max_length=80)),
                ('category', models.CharField(help_text='Change Template Name here', max_length=80)),
                ('assignment_group', models.CharField(help_text='assignment group', max_length=80)),
                ('type', models.CharField(help_text='Starndard, emergency, etc', max_length=80)),
                ('priority', models.CharField(help_text='High, Med, Low, etc', max_length=80)),
                ('impact', models.CharField(help_text='YUGE, Minor, etc', max_length=80)),
                ('u_failure_likelihood', models.CharField(help_text='High, Low, etc', max_length=80)),
                ('cmdb_ci', models.CharField(help_text='Eventually maybe a CMDB_CI', max_length=80)),
                ('description', models.CharField(help_text='description - the detailed stuff', max_length=4000)),
                ('business_service', models.CharField(default='Network Services', help_text='description - the detailed stuff', max_length=4000)),
                ('u_purpose_goal', models.CharField(help_text='Purpose of the Change', max_length=80)),
                ('justification', models.CharField(help_text='Justification - this will get appended with RITM#s', max_length=80)),
                ('u_environment_applied', models.CharField(help_text='environments this applies to', max_length=80)),
                ('u_implemented_test', models.BooleanField(help_text='Yes/No')),
                ('u_test_by_qa', models.BooleanField(help_text='Yes/No')),
                ('u_result_of_request', models.BooleanField(default=True, help_text='Yes/No')),
                ('u_request_item', models.CharField(default='RITM0000000', help_text='environments this applies to', max_length=80)),
                ('u_impact_business_unit', models.CharField(default='No Impact', help_text='description - the detailed stuff', max_length=4000)),
                ('u_impact_member', models.CharField(default='No impact', help_text='description - the detailed stuff', max_length=4000)),
                ('u_tested_by_business', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_detailed_sadd', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_downstream_apps_services', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_service_desk_support_req', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_tested_by_qa', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_prod_support_req', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('risk_impact_analysis', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_affect_bcp_services', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_take_system_offline', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_could_extend_overnight', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_system_server_reboot_required', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_non_member_impact', models.CharField(help_text='ex: Network Services', max_length=80)),
                ('u_cyber_security_risk', models.CharField(help_text="the Cyber's risk", max_length=80)),
                ('test_plan', models.CharField(help_text='Ze plan for Test', max_length=80)),
                ('implementation_plan', models.CharField(help_text='Ze Implementation Plan', max_length=80)),
                ('u_production_validation', models.CharField(help_text='Validatoin Plan', max_length=80)),
                ('u_rollback_tested', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('backout_plan', models.CharField(help_text='Roll the chnage back how?', max_length=80)),
                ('u_tech_review_attach', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_known_issues', models.BooleanField(help_text='Yes/No', max_length=32)),
                ('u_technical_approvers', models.CharField(help_text="approver's name", max_length=80)),
                ('u_technical_approver_Freeze', models.CharField(default='someone cool', help_text="addital freeze approver's name", max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_name', models.CharField(help_text='Name of the vlan', max_length=32)),
                ('vlan_number', models.IntegerField()),
                ('vlan_datacenter', models.ForeignKey(db_column='vlan_datacenter', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vlan_datacenter', to='DataCenter.datacenter')),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vrf_name', models.CharField(help_text='tenant/vrf name', max_length=32)),
                ('vrf_rd_value', models.CharField(help_text='tenant/vrf rd value', max_length=32)),
                ('vrf_bgp_bundle_name', models.CharField(help_text='tenant/vrf BGP Bundle name', max_length=32)),
                ('vrf_exists_on_edge', models.BooleanField(default=False, help_text='should this be built on the EDGE nodes?')),
                ('vrf_vlans', models.ManyToManyField(blank=True, help_text='vlans that belong to this tenant/vrf', null=True, related_name='vrf_vlans', to='DataCenter.Vlan')),
            ],
            options={
                'ordering': ['vrf_name'],
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switch_name', models.CharField(help_text='ex. BRM-LEAF-R13-1', max_length=100)),
                ('switch_datacenter', models.ForeignKey(db_column='switch_datacenter', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='switch_datcenter', to='DataCenter.datacenter')),
            ],
        ),
    ]
